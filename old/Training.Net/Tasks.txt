	28.08.2020

//1. Пересечение двух отрезков [A,B] и [C,D] на числовой прямой

//2. Заданы координаты трех точек на плоскости. Являются ли они вершинами квадрата? Если да, то найти координаты четвертой вершины.

//3. Если все числа натурального ряда записать подряд каждую цифру в своей позиции, то необходимо ответить на вопрос: какая цифра стоит в заданной позиции N.

//4. Сравнить стринг и стригбилдер в скорости.


	04.09.2020

//1. Дан массив чисел. Нужно его сдвинуть циклически на K позиций вправо, не используя других массивов.

//2. Даны два отсортированных массива чисел. Сформировать отсортированные массивы, являющиеся объединением, пересечением и разностью этих двух массивов (разность в смысле мультимножеств).

//3.Написать класс, который будет считывать построчно данные из файла, выводит в консоль и записывает в выходной файл только те, для которых пользователь нажал пробел,
если он нажал Esc, то выбрасывать исключение. Реализовать здесь паттерн IDisposable.

	07.09.2020

//1. Есть два множества строк без повторов. Нужно их объединить, исключив повторения.

//2. Есть N строк длины не более L. В каждой строке найти самую короткую подстроку, не содержащуюся в качестве подстроки в других строках.

	11.09.2020

//1. Предложите алгоритм поиска в односвязном списке k-го элемента с конца. Список реализован вручную, есть только операция получения следующего элемента и указатель на первый элемент. 
Алгоритм, по возможности, должен быть оптимален по времени и памяти.

2. Допустим, у вас есть однонаправленный список с петлёй. Его “последний” элемент содержит указатель на один из элементов этого же списка, причём не обязательно на первый.
Ваша задача — найти начальный узел петли. Элементы списка менять нельзя, память можно использовать только константную.

3. Реализуйте вручную стек со стандартными функциями push/pop и дополнительной функцией min, возвращающей минимальный элемент стека. Все эти функции должны работать за O(1).
Решение оптимизируйте по использованию памяти.

4. В простом текстовом редакторе доступно три операции MoveCursorTo(int row, int col), InsertChar(char c), DeleteChar(). Нужно добавить ещё две операции Undo и Redo.

5. Версионный стек. Поддерживаются операции Push, Pop, Rollback. Состояния стека после выполнения этих операций нумеруются. С помощью Rollback можно откатиться на любое состояние, 
указав его номер. Rollback тоже можно откатить. Помимо этого, существует операция Forget, позволяющая забыть всю историю изменений. 
После Forget нумерация операций начинается с начала, Forget нельзя откатить. Все 4 операции должны работать за O(1).

	18.09.2020

1. Реализовать класс множество с помощью списков и для него реализовать следующие методы
union, intersect, differense, simmetrical difference.

//2. Найти наибольшую длину подстроки-палиндрома в строке

//3. Проверитьсуществует ли способ разбить строку (слово) на несколько частей, каждая из которых входит в словарь.

4. Даны два слова и словарь. Необходимо найти алгоритм превращения одного слова в другое, меняя за один шаг одну букву, причём каждое новое слово должно быть в словаре.

//5. Реализуйте метод сжатия строки на основе счетчика повторяющихся символов. Например, строка aabcccccaaa должна превратиться в а2b1с5аЗ. 
Если «сжатая» строка оказывается длиннее исходной, метод должен вернуть исходную строку.

//6. Напишите класс MyStack, который реализует очередь с использованием двух очередей.

//7. Напишите класс MyQueue, который реализует очередь с использованием двух стеков.

	25.09.2020

//1. Дано K упорядоченных списков чисел. Нужно вернуть первые N элементов из их объединения. Предложите алгоритм эффективнее тривиального, то есть быстрее, чем за O(NK).

2. У нас есть N задач, которые нужно выполнить последовательно. Нам дается список пар задач, для которых вторая зависит от результата первой и должна выполняться после нее. 
Напишите программу, которая упорядочивает задачи таким образом, чтобы каждая задача выполнялась после того, как были выполнены все задачи, от которых она зависит. 
Если такой порядок отсутствует, выведите соответствующее сообщение. {1, 2}, {2, 5}, {2, 4}, {3, 1} -> 3, 1, 2, 5, 4

3. Расписание конференц-зала - это список мероприятий в формате [дата и время начала; дата и время окончания; название мероприятия]. 
Реализуйте структуру данных, чтобы иметь возможность быстро добавлять события и быстро проверять, доступен ли зал в заданном интервале [дата и время начала; дата и время окончания]?

4. Написать метод, который повторяет заданный Funс / Action указанное количество раз, пока он не выполнится без исключения. Между попытками ждет 100 миллисекунд.

//5. Написать реализацию бинарного дерева с помощью массива.

	28.09.2020

1. Даны две последовательности положительных целых чисел A и B. Сформировать последовательность строк вида «a:b», где a – число из A, а b – либо число из B такое,
что сумма цифр в a совпадает с суммой цифр на нечетных позициях из b, либо 0 (если в B не содержится соответствующих чисел).
Расположить элементы получившейся последовательности по возрастанию чисел a, а при одинаковых числах a – по убыванию b.

2. Реализовать метод расширения осуществляющий декартово произведение двух последовательностей (четных элементов из первой последовательности и нечетных из второй).
Метод должен быть обобщенным. Типы элементов соединяемых последовательностей могут отличаться. 
Должна быть предусмотрена возможность указания способа формирования элементов итоговой последовательности с помощью делегата (selector).

    30.10.2020

//1. Сделать, чтобы первый поток выводил на консоль «ping», а второй — «pong», и делали бы они это строго по очереди.

2. Реализовать синхронный доступ к списку через свой класс

3. Разработайте многопоточное приложение, выполняющее вычисление произведения матриц A (m×n) и B (n×k).
Элементы cij матрицы произведения С = A×B вычисляются параллельно p однотипными потоками. 
Если некоторый поток уже вычисляет элемент cij матрицы C, то следующий приступающий к вычислению поток выбирает для расчета элемент cij+1,
если j<k, и ci+1k, если j=k. Выполнив вычисление элемента матрицы-произведения, поток проверяет, нет ли элемента,
который еще не рассчитывается. Если такой элемент есть, то приступает к его расчету. 
В противном случае отправляет (пользовательское) сообщение о завершении своей работы и приостанавливает своё выполнение. 
Главный поток, получив сообщения о завершении вычислений от всех потоков, выводит результат на экран и запускает поток, 
записывающий результат в конец файла-протокола. В каждом потоке должна быть задержка в выполнении вычислений 
(чтобы дать возможность поработать всем потокам).

4. Написать программу, которая в многопоточном режим будет загружать список пользователей из текстового файла в базу данных. 
Разделителем в файле служит символ ";". Представлены следующие данные "Фамилия, Имя, Отчество, Возраст, Город". 
Загружать можно, используя ADO.Net или EF.

